import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Collection;
import java.util.Scanner;

public class BusRouter{
	
	File stopTimesFile;

	 shortestPathBetweenTwoStops(String userInputStopName1, String userInputStopName2);
	 getStopInformationTST(String userInputStopName);
	
	void getAllStopsInfoUsingArrivalTime(String hhmmss) throws FileNotFoundException
	{ 
		
		String[] inputTime = hhmmss.split(":");
		
		if(inputTime.length != 3 && Integer.parseInt(inputTime[0]) > 24 && Integer.parseInt(inputTime[1]) > 60 && Integer.parseInt(inputTime[2]) > 60)
		{
			System.out.print("Invalid input");
		}
		else
		{
			String inputTimeSearch = inputTime[0] + inputTime[1]+ inputTime[2]; 
			
		//
		// Test input file
		//
		
		try
		{
			File stoptimesFile = new File("stop_times.txt");
			this.stopTimesFile = stoptimesFile;
			
		}catch(Exception e)
		{
			System.out.print("file not found");
		}
		
		//
		// create Hashtable arrival times to Bus ID 
		//
		
		Scanner input = new Scanner(this.stopTimesFile);
		LinkedMap<String, Integer> arrivalsID = new LinkedMap<String, Integer>();
		 input.nextLine();
		while(input.hasNextLine())
		{
		  String[] line = input.nextLine().split(",");	
		  String busIDString = line[0];
		  int busID = Integer.parseInt(busIDString);
		  
		  String arrivalTimeString = line[1];
		  String[] arrivalTimeFormattedArray = arrivalTimeString.split(":");
		  
		  if(arrivalTimeFormattedArray[0].charAt(0) == ' ')
		  {
			  StringBuilder HourCorrecter = new StringBuilder(arrivalTimeFormattedArray[0]);
			  HourCorrecter.deleteCharAt(0);
			  arrivalTimeFormattedArray[0] = HourCorrecter.toString();
			  
		  }
		
		 
		  
		  //decode arrival to check valid 
		  if(Integer.parseInt(arrivalTimeFormattedArray[0]) > 0 && Integer.parseInt(arrivalTimeFormattedArray[0]) < 24
				  && Integer.parseInt(arrivalTimeFormattedArray[1]) >= 0  && Integer.parseInt(arrivalTimeFormattedArray[1]) < 60
				  && Integer.parseInt(arrivalTimeFormattedArray[0]) < 24 && Integer.parseInt(arrivalTimeFormattedArray[2]) >= 0 && Integer.parseInt(arrivalTimeFormattedArray[2]) < 60)
		  {
			  String key = arrivalTimeFormattedArray[0]+ arrivalTimeFormattedArray[1]+arrivalTimeFormattedArray[2];
			  arrivalsID.put(key, busID);
			  
		  }
		}
		
		Object[] BusIDObjectArray;
		if(arrivalsID.containsKey(inputTimeSearch))
		{
			 BusIDObjectArray = arrivalsID.valuesToArray(inputTimeSearch);
			 System.out.print(Arrays.toString(BusIDObjectArray));
		}
		
		
		 
		
	}
		
		
}
}
